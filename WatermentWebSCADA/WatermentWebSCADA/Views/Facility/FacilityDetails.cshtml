
@model WatermentWebSCADA.ViewModels.MainViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<body style="background-color:lavender;">
</body>
</html>

@*<p>Min ip er @Model.IP[1]</p>

    <p>Og min adresse er @Model.Address</p>

    @foreach (var item in Model.Name)
    {
        <p>@item</p>
    }*@

<head>
    <meta name="viewport" content="width=device-width" />
    <script type="text/javascript" src="http://canvasjs.com/assets/script/canvasjs.min.js"></script>

</head>

@*@{ int x = 0; }*@

<div>
    @*<h4>@Html.DisplayFor(model => model.Name[x])</h4>*@





    <table class="table">
        <tr>
            <th>
                <p>@foreach (var item in Model.conection)
                {
                    @item.ip
                })</p>


                <dl class="dl-horizontal">

                    <dt>
                        @Html.DisplayNameFor(model => model.Anlegg)

                    </dt>




                    <dd>
                        @foreach (var skill in Model.Anlegg)
                        {
                            @skill.Name
                        }
                    </dd>

             


                    <dt>

                        "Land"
                    </dt>

                    <dd>
                     
                        @foreach (var item in Model.Land)
                        {
                            @item.Name
                        }

                    </dd>


                    <dt>
                        "Fylke"
                        
                        @*@Html.DisplayNameFor(model => model.Lokasjoner)*@
                    </dt>

                    <dd>
                  
                        @foreach (var item in Model.Lokasjoner)
                        {
                            @item.County
                        }
                    </dd>
                    <dt>
                       "Postnr"
                    </dt>
                    <dd>
                        @foreach (var item in Model.Lokasjoner)
                        {
                            @item.Postcode
                        }
                    </dd>
                    <dt>
                        "Adresse"
                    </dt>

                    <dd>
                        @foreach (var item in Model.Lokasjoner)
                        {
                            @item.Address   
                        }
                    </dd>
                    <dt>
                       "Bruker"
                    </dt>

                    <dd>
                        @foreach (var item in Model.Brukere)
                        {
                            <p> @item.FirstName  @item.LastName</p>
                        }
                    </dd>
                    <dt>
                      "Telefon"
                    </dt>

                    <dd>
                        @foreach (var item in Model.Brukere)
                        {
                           @item.Phone
                        }
                    </dd>
                    <dt>
                      "E-post"
                    </dt>

                    <dd>
                        @foreach (var item in Model.Brukere)
                        {
                            @item.Email
                        }
                    </dd>
                    <dt>
                       "Domene"
                    </dt>

                    <dd>
                        @foreach (var item in Model.Anlegg)
                        {
                            @item.Domain
                        }
                    </dd>
                    <dt>
                        "IP"
                    </dt>

                    <dd>
                        @foreach (var skill in Model.Anlegg)
                        {
                            @skill.IP
                        }
                    </dd>

                       <dt>
                       @*"Domene"*@
          
                    </dt>

                    <dd>
                        @*@Html.DisplayFor(model => model.Email[x])*@
                    </dd>
                    <dt>
                      
     

                            @foreach (var skill in Model.Anlegg)
                            {
                                <a href="http://@skill.IP/webvisu/webvisu.htm" target="_blank" class="btn btn-info">Remote Connect &raquo;</a>
                               
                            }

</dt>

                    <dd>
                       
                      
                    </dd>


                </dl>

            </th>
            <th>
                <script type="text/javascript">


                    window.onload = function () {
                        var ctx = document.getElementById("chart").getContext("2d");

                        var myChart = new Chart(ctx, {
                            responsive: true,

                            type: "line",


                            data: {
                                "labels": [

                                       @{int Idinte2 = 0;}
                           @{ float? verdi;}
                        @foreach (var value in Model.Verdier)
                    {
                        verdi = Model.Verdier[Idinte2].ProcessValue;

                        Idinte2++;
                         @*@Model.Verdier[Idinte2-1].ProcessValue*@


                         }



              "Time",
                     "@Model.Verdier[Idinte2-8].Recorded",
                   "@Model.Verdier[Idinte2-7].Recorded",
                    "@Model.Verdier[Idinte2-6].Recorded",
                 "@Model.Verdier[Idinte2-5].Recorded",
                   "@Model.Verdier[Idinte2-4].Recorded",
                    "@Model.Verdier[Idinte2-3].Recorded",
                     "@Model.Verdier[Idinte2-2].Recorded",
                   "@Model.Verdier[Idinte2-2].Recorded",
                    "@Model.Verdier[Idinte2-1].Recorded",
                                ],
                                datasets: [{
                                    label: "Reactor Core Temperature",
                                    "fill": "true",
                                    backgroundColor: "rgba(60, 47, 238, 0.2)",

                                    yAxisID: "y-axis-0",
                                    "data": [




              @Model.Verdier[Idinte2-9].ProcessValue,
                     @Model.Verdier[Idinte2-8].ProcessValue,
                   @Model.Verdier[Idinte2-7].ProcessValue,
                    @Model.Verdier[Idinte2-6].ProcessValue,
                 @Model.Verdier[Idinte2-5].ProcessValue,
                   @Model.Verdier[Idinte2-4].ProcessValue,
                    @Model.Verdier[Idinte2-3].ProcessValue,
                     @Model.Verdier[Idinte2-2].ProcessValue,
                   @Model.Verdier[Idinte2-2].ProcessValue,
                    @Model.Verdier[Idinte2-1].ProcessValue,
                                    ]
                                },

                                //{
                                //    "label": "Reactor Core  Pressure",
                                //    "fill": "true",
                                //    backgroundColor: "rgba(125, 109, 109,0.2)",
                                //    yAxisID: "y-axis-1",
                                //    "data": [
                                //    1.9588,
                                //    2.1226,
                                //    2.1392,
                                //    2.223,
                                //    1.9048,
                                //      1.9588,
                                //    2.1226,
                                //    2.1392,
                                //    2.223,
                                //    1.9048
                                //    ]
                                //}
                                ]
                            },

                            options: {

                                scales: {
                                    yAxes: [{

                                        position: "left",
                                        
                                        "id": "y-axis-0",
                                        display: true,
                                        ticks: {
                                            beginAtZero: true,
                                            steps: 10,
                                            stepValue: 5,
                                            max: 50,
                                        }
                                    }
                                    //, {
                                    //    position: "right",
                                    //    "id": "y-axis-1"
                                    //}
                                    ]
                                }
                            }

                        });
                        Chart.defaults.global.animationSteps = 50;
                        Chart.defaults.global.tooltipYPadding = 16;
                        Chart.defaults.global.tooltipCornerRadius = 0;
                        Chart.defaults.global.tooltipTitleFontStyle = "normal";
                        Chart.defaults.global.tooltipFillColor = "rgba(0,160,0,0.8)";
                        Chart.defaults.global.animationEasing = "easeOutBounce";
                        Chart.defaults.global.responsive = true;
                        Chart.defaults.global.scaleLineColor = "black";
                        Chart.defaults.global.scaleFontSize = 16;
                    };
                </script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.0/Chart.min.js"></script>
                <canvas id="chart" width="920" height="350"></canvas>

            </th>
            <th>


            </th>



            <th></th>



            </th>
        </tr>
    </table>




</div>
<div class="jumbotron text-center img-responsive" id="jumbotron">
    <div id="jumbotron-header">
        <h4><b>Alarms</b></h4>

        @*@{ int alarmInt = 0;}
            @foreach (var item in Model.Alarmsoccured)
            {
                <p><b> <font color="red"><font size="3"> @Html.DisplayFor(model => model.Description[alarmInt]), @Html.DisplayFor(model => model.AlarmProcessValue[alarmInt])ºC</font></b><font color="black"><font size="2"><b> @Html.DisplayFor(model => model.Alarmsoccured[alarmInt])</b></p>
                alarmInt++;
            }*@
            
        
        @foreach (var skill in Model.Alarmer)
        {
            <p>@skill.Description @skill.AlarmOccured @skill.Status</p>
        }

        

        @*@foreach (var value in Model.Verdier)
        {
            <p>@value.ProcessValue og @value.Recorded</p>
        }*@

        @{int Idinte = 0;}
        @{Array values;}
        @{ float? kimmy;}

        @*@foreach (var value in Model.Verdier)
        {

            Idinte++;
            @*<p> @Model.Verdier[Idinte].ProcessValue</p>
            //values = Model.Verdier.ToArray();
            <p>@Idinte</p>
            <p>@value.ProcessValue,</p>*@


@*

    }
    <b>@Model.Verdier[Idinte - 1].ProcessValue</b>
    <b>@Model.Verdier[1].ProcessValue</b>*@
      


    </div>

</div>

