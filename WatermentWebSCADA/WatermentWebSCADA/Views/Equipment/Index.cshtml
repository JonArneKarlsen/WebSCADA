@model IEnumerable<WatermentWebSCADA.ViewModels.EquipmentVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    <h2>All Equipments for the facility</h2>

    @Html.ActionLink("Add Equipment", "ViewCreate", "Equipment", null,"","", Model, new { @class = "modal-link btn btn-success" })
   
    <style>
        .modal-content {
            width: 600px !important;
            margin: 30px auto !important;
            background-color: rgb(171,194,122);
        }
    </style>
    <div id="modal-container" class="modal fade"
         tabindex="-1" role="dialog">
        <div class="modal-content">

        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            // Initialize numeric spinner input boxes
            //$(".numeric-spinner").spinedit();
            // Initialize modal dialog
            // attach modal-container bootstrap attributes to links with .modal-link class.
            // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });
            // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            //clear modal cache, so that new content can be loaded
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
        });
    </script>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SIUnits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastCalibrated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InstallDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeSpecification)
            </th>
            <th></th>
        </tr>
        
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Tag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SIUnits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastCalibrated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InstallDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Manufacturer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeSpecification)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }

    </table>


    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>
</div>